# Hardcoding because multiple panels aren't consistently reflected in the
# reported work area dimensions
MARGIN_TOP=0
MARGIN_LEFT=0
MARGIN_RIGHT=0
MARGIN_BOTTOM=28

MONITOR_W=1920
MONITOR_H=1080


if [ -z "$1" ]; then
  echo "Usage: tile-thirds top|top2|topleft|topleft2|...etc..." >&2
  exit 1
fi

if ! [ -x "$(command -v wmctrl)" ]; then
  echo 'Error: wmctrl is not installed.' >&2
  exit 1
fi

if ! [ -x "$(command -v xdotool)" ]; then
  echo 'Error: xdotool is not installed.' >&2
  exit 1
fi

# get screen information
screen_geometry=$(wmctrl -d | awk 'NR==1 && $3=="DG:" {print $4 "x" $8 "x" $9}')
echo "Screen:" $screen_geometry

[[ $screen_geometry =~ ([0-9]+)x([0-9]+) ]]
desktop_w=${BASH_REMATCH[1]}
desktop_h=${BASH_REMATCH[2]}

# get window information
window_id=$(wmctrl -lp | grep $(xprop -root | grep _NET_ACTIVE_WINDOW | head -1 | \
  awk '{print $5}' | sed 's/,//' | sed 's/^0x/0x0/') | awk '{print $1}')

window_geometry=$(wmctrl -lG | awk '$1==wid {print $3 "x" $4 "x" $5 "x" $6'} wid="${window_id}")

[[ $window_geometry =~ ([0-9]+)x([0-9]+) ]]
window_x=${BASH_REMATCH[1]}
window_y=${BASH_REMATCH[2]}
echo "Window:" $window_x $window_y

# Get offset values for the window borders/titlebar, since our resizing is
# applied to the content area
# https://unix.stackexchange.com/a/156349
aw=$(xdotool getactivewindow)
# echo $(xwininfo -id "$aw" |
#       sed -n -e "s/^ \+Absolute upper-left X: \+\([0-9]\+\).*/x=\1/p" \
#              -e "s/^ \+Absolute upper-left Y: \+\([0-9]\+\).*/y=\1/p" \
#              -e "s/^ \+Width: \+\([0-9]\+\).*/w=\1/p" \
#              -e "s/^ \+Height: \+\([0-9]\+\).*/h=\1/p" )
extents=$(xprop _NET_FRAME_EXTENTS -id "$aw" | grep "NET_FRAME_EXTENTS" | cut -d '=' -f 2 | tr -d ' ')

border_left=$(echo $extents | cut -d ',' -f 1) # width of left border
border_right=$(echo $extents | cut -d ',' -f 2) # width of right border
border_top=$(echo $extents | cut -d ',' -f 3)  # height of title bar
border_bottom=$(echo $extents | cut -d ',' -f 4) # height of bottom border

x_offset=$border_left
y_offset=$border_top
w_offset=$((border_left+border_right))
h_offset=$((border_top+border_bottom))

viewport_x=$MARGIN_LEFT
viewport_y=$MARGIN_TOP

viewport_w=$((desktop_w - MARGIN_LEFT - MARGIN_RIGHT))
viewport_h=$(((desktop_h - MARGIN_TOP - MARGIN_BOTTOM) / 2))
viewport_w_onethird=$((viewport_w / 3))
viewport_w_twothird=$((2 * viewport_w / 3))
viewport_h_onethird=$((viewport_h / 3))
viewport_h_twothird=$((2 * viewport_h / 3))

# echo "Viewport width:" $viewport_w $viewport_w_twothird $viewport_w_onethird
# echo "Viewport height:" $viewport_h $viewport_h_twothird $viewport_h_onethird

case "$1" in
    center|topcenter|bottomcenter|leftcenter|rightcenter)
        overall_w=$viewport_w_onethird
        overall_h=$viewport_h_onethird
        ;;

    top|bottom)
        overall_w=$viewport_w
        overall_h=$viewport_h_onethird
        ;;

    left|right)
        overall_w=$viewport_w_onethird
        overall_h=$viewport_h
        ;;

    topleft|topright|bottomleft|bottomright)
        overall_w=$viewport_w_onethird
        overall_h=$viewport_h_onethird
        ;;

    top2|bottom2)
        overall_w=$viewport_w
        overall_h=$viewport_h_twothird
        ;;

    left2|right2)
        overall_w=$viewport_w_twothird
        overall_h=$viewport_h
        ;;

    topleft2|topright2|bottomleft2|bottomright2)
        overall_w=$viewport_w_twothird
        overall_h=$viewport_h_twothird
        ;;
esac

case "$1" in
    leftcenter|top|topleft|left|bottomleft|bottom|top2|topleft2|left2|bottomleft2|bottom2)
        overall_x=0
        ;;
    rightcenter|right|topright|bottomright)
        overall_x=$viewport_w_twothird
        ;;
    center|topcenter|bottomcenter|right2|topright2|bottomright2)
        overall_x=$viewport_w_onethird
        ;;
esac

case "$1" in
    topcenter|top|topleft|left|right|topright|top2|left2|topleft2|right2|topright2)
        overall_y=0
        ;;
    bottomcenter|bottom|bottomleft|bottomright)
        overall_y=$viewport_h_twothird
        ;;
    leftcenter|rightcenter|bottom2|bottomright2|bottomleft2)
        overall_y=$viewport_h_onethird
        ;;
esac

final_x=$((viewport_x + overall_x + x_offset + monitor_x))
final_y=$((viewport_y + overall_y + y_offset + monitor_y))
final_w=$((overall_w - w_offset))
final_h=$((overall_h - h_offset))

echo "x:" $final_x " y:" $final_y " w:" $final_w " h:" $final_h

# exit;
wmctrl -r :ACTIVE: -b remove,maximized_horz,maximized_vert

# Doing this twice because some windows (i.e. terminals) don't end up at the right
# dimensions the first time. No idea why.
xdotool getactivewindow windowmove $final_x $final_y windowsize $final_w $final_h
xdotool getactivewindow windowmove $final_x $final_y windowsize $final_w $final_h
